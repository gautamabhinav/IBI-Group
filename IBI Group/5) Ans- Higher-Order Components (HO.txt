5) Ans:- Higher-Order Components (HOC) is an advanced pattern in React that allows you to reuse component logic, enhance component behavior, and share functionalities across multiple components. HOCs are not a part of React API; instead, they are a pattern made possible by the compositional nature of React components.

In simple terms, a Higher-Order Component is a function that takes a component as input and returns a new component with additional props or behavior. It wraps the original component with some logic or functionality, allowing you to extend and modify its behavior.

The typical structure of a Higher-Order Component looks like this:

const higherOrderComponent = (WrappedComponent) => {
  // Define the logic and behavior of the HOC here
  const EnhancedComponent = (props) => {
    // Modify props or add new props here
    // Return the WrappedComponent with the enhanced props
    return <WrappedComponent {...props} />;
  };

  return EnhancedComponent;
};
```

To use the HOC, you pass a component as an argument to the HOC function, and it returns a new component with the extended behavior:

const EnhancedComponent = higherOrderComponent(BaseComponent);


Here's a more concrete example to illustrate how a Higher-Order Component can be used:


// Example Higher-Order Component
const withLogger = (WrappedComponent) => {
  const EnhancedComponent = (props) => {
    console.log("Component is rendering:", WrappedComponent.name);
    return <WrappedComponent {...props} />;
  };

  return EnhancedComponent;
};

// Example Base Component
const MyComponent = (props) => {
  return <div>{props.message}</div>;
};

// Using the Higher-Order Component with the Base Component
const EnhancedComponent = withLogger(MyComponent);

// Rendering the EnhancedComponent
ReactDOM.render(
  <EnhancedComponent message="Hello, World!" />,
  document.getElementById("root")
);
```

In this example, we have a Higher-Order Component `withLogger`, which takes a component as input and logs a message whenever the component renders. We then have a simple base component `MyComponent` that takes a `message` prop and renders it.

By using the `withLogger` HOC, we create an `EnhancedComponent` that includes the additional logging behavior. When we render the `EnhancedComponent`, it will log the message "Component is rendering: MyComponent" before rendering the actual content.

Higher-Order Components are widely used in React for cross-cutting concerns such as logging, authentication, authorization, or any functionality that needs to be shared across multiple components. They provide a way to separate concerns and keep individual components focused on specific tasks.


